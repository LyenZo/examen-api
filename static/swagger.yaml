openapi: 3.0.0
info:
  title: API de Usuarios
  description: API para gestionar usuarios con autenticación JWT (sin conexión a base de datos)
  version: 1.0.0
servers:
  - url: 'https://18.212.243.73/'
    description: Servidor local de desarrollo

paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      operationId: getUsers
      tags:
        - Users
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID del usuario
                    name:
                      type: string
                      description: Nombre del usuario
                    email:
                      type: string
                      description: Correo electrónico del usuario
        '500':
          description: Error interno del servidor
  /users/post:
    post:
      summary: Crear un nuevo usuario
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del usuario
                email:
                  type: string
                  description: Correo electrónico del usuario
                password:
                  type: string
                  description: Contraseña del usuario
      responses:
        '201':
          description: Usuario creado exitosamente
        '400':
          description: Error en la solicitud, falta de parámetros o inválidos
        '500':
          description: Error interno del servidor

  /users/update/{id}:
    put:
      summary: Actualizar un usuario
      operationId: updateUser
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del usuario
                email:
                  type: string
                  description: Correo electrónico del usuario
                password:
                  type: string
                  description: Contraseña del usuario
      responses:
        '200':
          description: Usuario actualizado exitosamente
        '400':
          description: Datos de entrada inválidos
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno del servidor
  /users/delete/{id}:
    delete:
      summary: Eliminar un usuario
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado exitosamente
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno del servidor

  /users/login:
    post:
      summary: Login para obtener un token JWT
      operationId: login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Correo electrónico del usuario
                password:
                  type: string
                  description: Contraseña del usuario
      responses:
        '200':
          description: Token JWT generado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: El token JWT para acceder a rutas protegidas
        '401':
          description: Credenciales inválidas

components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - JWT: []

tags:
  - name: Users
    description: Operaciones sobre usuarios
  - name: Auth
    description: Operaciones de autenticación
